buildscript {
	repositories {
		mavenLocal()
		maven {
			url "https://repository.liferay.com/nexus/content/groups/liferay-ce/"
		}
	}

    dependencies {
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins.service.builder", version: "1.0.5"
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins.wsdd.builder", version: "latest.release"
	}
}

repositories {
	mavenLocal()
	maven {
		url "http://cdn.repository.liferay.com/nexus/content/groups/public"
	}
}

apply plugin: "com.liferay.portal.tools.service.builder"
apply plugin: "com.liferay.portal.tools.wsdd.builder"

dependencies {
	compile  project(':blade.servicebuilder.api')
	testCompile group: 'junit', name: 'junit', version: '4.+'
	testCompile group: 'com.liferay.portal', name: 'portal-test', version: '7.0.0-SNAPSHOT'
	testCompile group: 'com.liferay.portal', name: 'portal-test-internal', version: '7.0.0-SNAPSHOT'
	testCompile group: 'com.liferay', name: 'com.liferay.arquillian.extension.junit.bridge', version: '1.0.0-SNAPSHOT'
}

buildService {
	apiDirName = "../blade.servicebuilder.api/src/main/java"
	beanLocatorUtil = "com.liferay.util.bean.PortletBeanLocatorUtil"
	hbmFileName = "src/main/resources/META-INF/module-hbm.xml"
	implDirName = "src/main/java"
	inputFileName = "service.xml"
	modelHintsFileName = "src/main/resources/META-INF/portlet-model-hints.xml"
	osgiModule = true
	propsUtil = "blade.servicebuilder.service.util.PropsUtil"
	remotingFileName = null
	resourcesDirName = "src/main/resources"
	springFileName = "src/main/resources/META-INF/spring/module-spring.xml"
	springNamespaces = ["beans","osgi"]
	sqlDirName = "src/main/resources/META-INF/sql"
	sqlFileName = "tables.sql"
	testDirName = "src/it"
}

buildWSDD {
	inputFileName = "service.xml"
	outputDirName = "src/main/java"
	serverConfigFileName = "src/main/resources/server-config.wsdd"
}

version = '1.0.0'
